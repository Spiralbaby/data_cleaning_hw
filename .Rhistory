a <- available.packages()
a <- available.packages()
help()
packages()
package
package()
a <-available.package()
a <- available.packages()
head(rownames(a),3)
head(rownames(a),9)
a
head(rownames(c))
head(rownames(c),10)
install.packages("slidify")
install.packages("ggplot2")
install.packages("KernSmooth")
install.packages("ggplot2")
library(KernSmooth)
library(KernSmooth)
git help git
libary(datasets)
library(datasets)
data(iris)
?iris
dim(iris)
summary(iris)
iris
head(iris)
a <- split(iris, iris$Species)
a
ls
b <- a$virginica
b
c <- lapply(b, mean)
c <- lapply(b$Sepal.Length, mean)
c
rm(c)
c
a
b
c <- vector(b$Sepal.Length)
c <- b$Sepal.Length
c
d <- mean(c)
d
apply(iris[, 1:4], 1, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris, 2, mean)
apply(iris, 2, mean)
library(datasets)
data(mtcars)
library(datasets)
data(mtcars)
?mtcars
mtcars
test1 <- lapply(mtcars, mean)
test1
test2 <- sapply(split(mtcars$mpg, mtcars$cyl), mean)
test2
test3 <- sapply(mtcars, cyl, mean)
test4 <- mean(mtcars$mpg, mtcars$cyl)
test5 <- split(mtcars$mpg, mtcars$cyl)
test5
test6 <- sapply(test5, mean)
test6
26.66364 - 15.10000
test7 <- sapply(split(mtcars$hp, mtcars$cyl), mean)
test7
82.63636 - 209.21429
debug(ls)
ls
ls()
q
?inverse
??inverse
source('~/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(2)
mono <- makeCacheMatrix(2)
stud <- makeCacheMatrix2(2)
cacheSolve(mono)
cacheSolve(stud)
cacheSolve2(stud)
cacheSolve2(stud)
source('~/ProgrammingAssignment2/cachematrix.R')
stud <- makeCacheMatrix2(2)
cacheSolve2(stud)
source('~/ProgrammingAssignment2/cachematrix.R')
stud <- makeCacheMatrix2(2)
cacheSolve2(stud)
cacheSolve2(stud)
??solve
source('~/ProgrammingAssignment2/cachematrix.R')
cacheSolve2(stud)
stud <- makeCacheMatrix2(2)
cacheSolve2(stud)
stud <- makeCacheMatrix2(2)
stud
cacheSolve2(stud)
cacheSolve2(stud)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
stud <- makeCacheMatrix2(2)
source('~/ProgrammingAssignment2/cachematrix.R')
stud <- makeCacheMatrix2(2)
cacheSolve2(stud)
cacheSolve2(stud)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
studly <- makeCacheMatrix3(2)
cacheSolve3(studly)
cacheSolve3(studly)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
sty <- makeCacheMatrix4(2)
cacheSolve4(sty)
source('~/ProgrammingAssignment2/cachematrix.R')
sty <- makeCacheMatrix4(2)
sty
cacheSolve4(sty)
source('~/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix5(2)
to <- makeCacheMatrix5(2)
cacheSolve5(to)
cacheSolve5(to)
source('~/ProgrammingAssignment2/cachematrix.R')
to <- makeCacheMatrix5(2)
cacheSolve5(to)
source('~/ProgrammingAssignment2/cachematrix.R')
to <- makeCacheMatrix5(2)
cacheSolve5(to)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
to <- makeCacheMatrix5(2)
cacheSolve5(to)
cacheSolve5(to)
source('~/ProgrammingAssignment2/cachematrix.R')
to <- makeCacheMatrix5(2)
cacheSolve5(to)
cacheSolve5(to)
source('~/ProgrammingAssignment2/cachematrix.R')
to <- makeCacheMatrix5(2)
cacheSolve5(to)
cacheSolve5(to)
source('~/ProgrammingAssignment2/cachematrix.R')
source('~/ProgrammingAssignment2/cachematrix.R')
View(top_counts)
library(swirl)
swirl
swirl()
top_counts_sorted <- arrange(top_counts, count)
top_counts <- filter(pack_sum, count > 679)
play()
top_counts <- filter(pack_sum, count > 679)
nxt()
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, count = desc)
?arrange
top_counts_sorted <- arrange(top_counts, desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
student3
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
??mutate
library(dplyr)
?mutate
??mutate
submit()
students4
submit()
?unique
submit()
submit()
passed
failed
passed <- mutate(passed,status = "passed")
failed <- mutate(failed,status = "failed")
packageVersion('dplyr')
?bind_rows
bind_rows(list(passed, failed))
bind_rows(passed, failed)
sat
?select
submit()
submit()
submit()
NEI <- readRDS("summarySCC_PM25.rds")
setwd("~/Desktop/DataSci/Data Analysis/HW2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
temp <- NEI
temp <- group_by(temp, year)
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
temp <- group_by(temp, year)
str(temp)
summarize(temp, sum(temp$year))
summarize(temp, sum(temp$Emissions))
str(temp)
temp <- NEI
rm(temp)
temp <- select(NEI, year, Emissions)
str(temp)
temp <- group_by(temp, year)
summarize(temp, sum(temp$Emissions))
tapply(temp$Emissions, temp$year, sum)
temp$year <- as.factor(temp$year)
summarize(temp, sum(temp$Emissions))
str(temp)
str(NEI)
temp <- select(NEI, type, Emissions)
temp <- group_by(temp, type)
summarize(temp, smm = sum(Emissions))
str(temp)
summarize(temp, total=sum(Emphasize))
summarize(temp, total=sum(Emissions))
ddply(temp,~type,summarise,total=sum(Emissions))
t<- ddply(temp,~type,summarise,total=sum(Emissions))
str(t)
rm(t)
temp <- select(NEI, year, Emissions)
t<- ddply(temp,~year,summarise,total=sum(Emissions))
t
with(t, plot(year, total))
plot1Df <- select(NEI, year, Emissions)
plot1AnnualSums <- ddply(plot1Df,~year,summarise,total=sum(Emissions))
with(plot1AnnualSums, plot(year, total))
with(plot1AnnualSums, plot(year, total), col="red")
with(plot1AnnualSums, plot(year, total), col="Red")
rm(temp)
rm(t)
rm(plot1Df)
rm(plot1AnnualSums)
plot1Df <- select(NEI, year, Emissions)
plot1AnnualSums <- ddply(plot1Df,~year,summarise,total=sum(Emissions))
with(plot1AnnualSums, plot(year, total))
?plot
with(plot1AnnualSums, plot(year, total))
with(plot1AnnualSums, plot(year, total), type="l", ylab="Total Emissions")
with(plot1AnnualSums, plot(year, total), type="l", ylab="Total Emissions")
with(plot1AnnualSums, plot(year, total), type="l"))
with(plot1AnnualSums, plot(year, total), type="l")
with(plot1AnnualSums, plot(year, total), type="")
with(plot1AnnualSums, plot(year, total), type="n")
with(plot1AnnualSums, plot(year, total), type="n")
with(plot1AnnualSums, plot(year, total))
with(plot1AnnualSums, plot(year, total), ylab = "Total Emissions")
library("labeling", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
with(plot1AnnualSums, plot(year, total), ylab = "Total Emissions")
detach("package:plyr", unload=TRUE)
with(plot1AnnualSums, plot(year, total), ylab = "Total Emissions")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
with(plot1AnnualSums, plot(year, total), ylab = "", xlab = "")
with(AnnualSums, plot(year, total), ylab = "", xlab = ""))
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year"))
with(plot1AnnualSums, plot(year, total, type = "n", ylab="Total Emissions", xlab="Year"))
with(plot1AnnualSums, plot(year, total, ylab="Total Emissions", xlab="Year"))
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year"))
png(file="plot1.png")
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year"))
dev.off()
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", title ="plot1"))
?plot
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="plot1"))
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total PM2.5 Emissions in the US from 1999 - 2008"))
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total US PM2.5 Emissions from 1999 - 2008"))
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total US PM2.5 Emissions from \n1999 - 2008"))
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total PM2.5 Emissions in the US\n1999 - 2008"))
png(file="plot1.png")
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total PM2.5 Emissions in the US\n1999 - 2008"))
dev.off()
rm(plot1AnnualSums)
rm(plot1Df)
?subset
plot1Df <- subset(NEI, fips == "24510")
str(plot1Df)
plot1Df <- select(plot1Df, year, Emissions)
plot1AnnualSums <- ddply(plot1Df,~year,summarise,total=sum(Emissions))
png(file="plot2.png")
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total PM2.5 Emissions in the Maryland\n1999 - 2008"))
)
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total PM2.5 Emissions in the Maryland\n1999 - 2008"))
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total PM2.5 Emissions in the Maryland\n1999 - 2008"))
dev.off()
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total PM2.5 Emissions in the Maryland\n1999 - 2008"))
png(file="plot2.png")
with(plot1AnnualSums, plot(year, total, type = "l", ylab="Total Emissions", xlab="Year", main ="Total PM2.5 Emissions in Maryland\n1999 - 2008"))
dev.off()
setwd("~/Desktop/DataSci/cleaning/UCI HAR Dataset")
dir()
source('~/Desktop/DataSci/cleaning/UCI HAR Dataset/run_analysis.R')
meanMasterData
str(meanMasterData)
str(master_raw_data)
unique(master_raw_dat$activity_name)
unique(master_raw_data$activity_name)
source('~/Desktop/DataSci/cleaning/UCI HAR Dataset/run_analysis.R')
?write.table
write.table(meanMasterData, file="meanMasterData.txt", row.name=FALSE)
source('~/Desktop/DataSci/cleaning/UCI HAR Dataset/run_analysis.R')
source('~/Desktop/DataSci/cleaning/UCI HAR Dataset/run_analysis.R')
setwd("~/Desktop/DataSci/cleaning/data_cleaning_hw")
source('~/Desktop/DataSci/cleaning/data_cleaning_hw/run_analysis.R')
